// <auto-generated />
using System;
using BEARFLIX.Models.BD;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BEARFLIX.Migrations
{
    [DbContext(typeof(BearflixContext))]
    partial class BearflixContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BEARFLIX.Models.BD.Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PK__Banco__3213E83F453A5249");

                    b.HasIndex(new[] { "Descripcion" }, "UQ__Banco__298336B681B1EA29")
                        .IsUnique();

                    b.ToTable("Banco");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PK__Genero__3213E83F45240470");

                    b.HasIndex(new[] { "Descripcion" }, "UQ__Genero__298336B6F1ABFD5C")
                        .IsUnique();

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Pelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descripcion");

                    b.Property<int>("Duracion")
                        .HasColumnType("int")
                        .HasColumnName("duracion");

                    b.Property<DateOnly>("Estreno")
                        .HasColumnType("date")
                        .HasColumnName("estreno");

                    b.Property<string>("Fondo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fondo");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("id_proveedor");

                    b.Property<string>("Portada")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("portada");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio_compra");

                    b.Property<decimal>("PrecioRenta")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio_renta");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("titulo");

                    b.Property<string>("TituloImagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("titulo_imagen");

                    b.Property<string>("Video")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("video");

                    b.HasKey("Id")
                        .HasName("PK__Pelicula__3213E83FBFB2EB9D");

                    b.HasIndex("IdProveedor");

                    b.HasIndex(new[] { "Titulo" }, "UQ__Pelicula__38FA640F3196FD60")
                        .IsUnique();

                    b.HasIndex(new[] { "Titulo" }, "idx_pelicula_titulo");

                    b.ToTable("Pelicula");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PK__Permiso__3213E83F17871AFC");

                    b.HasIndex(new[] { "Descripcion" }, "UQ__Permiso__298336B6A2280B6D")
                        .IsUnique();

                    b.ToTable("Permiso");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<byte>("Porcentaje")
                        .HasColumnType("tinyint")
                        .HasColumnName("porcentaje");

                    b.HasKey("Id")
                        .HasName("PK__Proveedo__3213E83FB22503CD");

                    b.HasIndex(new[] { "Descripcion" }, "UQ__Proveedo__298336B672F23E65")
                        .IsUnique();

                    b.HasIndex(new[] { "Descripcion" }, "idx_proveedor_descripcion");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Puntaje", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int")
                        .HasColumnName("id_pelicula");

                    b.Property<byte>("Puntaje1")
                        .HasColumnType("tinyint")
                        .HasColumnName("puntaje");

                    b.HasKey("IdUsuario", "IdPelicula")
                        .HasName("PK__Puntaje__856E135952663870");

                    b.HasIndex("IdPelicula");

                    b.HasIndex(new[] { "IdUsuario", "Puntaje1" }, "idx_puntaje_usuario");

                    b.ToTable("Puntaje");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Reporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaGeneracion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_generacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("GananciasBrutas")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("ganancias_brutas");

                    b.Property<decimal>("GananciasTotales")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("ganancias_totales");

                    b.Property<DateOnly>("RangoFin")
                        .HasColumnType("date")
                        .HasColumnName("rango_fin");

                    b.Property<DateOnly>("RangoInicio")
                        .HasColumnType("date")
                        .HasColumnName("rango_inicio");

                    b.HasKey("Id")
                        .HasName("PK__Reporte__3213E83F24E5CBEB");

                    b.ToTable("Reporte");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.ReporteProveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("id_proveedor");

                    b.Property<int>("IdReporte")
                        .HasColumnType("int")
                        .HasColumnName("id_reporte");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo");

                    b.Property<decimal>("MontoAPagar")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("monto_a_pagar");

                    b.Property<decimal>("TotalGanancias")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total_ganancias");

                    b.HasKey("Id")
                        .HasName("PK__ReporteP__3213E83FFF906C72");

                    b.HasIndex("IdTipo");

                    b.HasIndex(new[] { "IdReporte", "IdProveedor", "IdTipo" }, "UQ__ReporteP__97F8BA38FD28AF8C")
                        .IsUnique();

                    b.HasIndex(new[] { "IdProveedor", "IdTipo" }, "idx_reporte_proveedor_tipo");

                    b.ToTable("ReporteProveedor");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PK__Rol__3213E83FF5DAB9A0");

                    b.HasIndex(new[] { "Descripcion" }, "UQ__Rol__298336B62AAA1E95")
                        .IsUnique();

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Tarjeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdBanco")
                        .HasColumnType("int")
                        .HasColumnName("id_banco");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("numero");

                    b.Property<string>("Titular")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("titular");

                    b.Property<string>("UltimosCuatro")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("ultimos_cuatro");

                    b.Property<DateOnly>("Vencimiento")
                        .HasColumnType("date")
                        .HasColumnName("vencimiento");

                    b.HasKey("Id")
                        .HasName("PK__Tarjeta__3213E83FA1E6AB09");

                    b.HasIndex("IdBanco");

                    b.HasIndex("IdTipo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Tarjeta");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.TipoTarjeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PK__TipoTarj__3213E83FA6CA5840");

                    b.HasIndex(new[] { "Descripcion" }, "UQ__TipoTarj__298336B6FCC554AD")
                        .IsUnique();

                    b.ToTable("TipoTarjeta");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.TipoVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PK__TipoVent__3213E83F0CA5A2F4");

                    b.HasIndex(new[] { "Descripcion" }, "UQ__TipoVent__298336B67F4349E7")
                        .IsUnique();

                    b.ToTable("TipoVenta");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("contrasena");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("correo");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_baja");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_registro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Foto")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("foto");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PK__Usuario__3213E83F1BCC89CA");

                    b.HasIndex(new[] { "Correo" }, "UQ__Usuario__2A586E0BF5ABB513")
                        .IsUnique();

                    b.HasIndex(new[] { "Correo" }, "idx_usuario_correo")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Expiracion")
                        .HasColumnType("datetime")
                        .HasColumnName("expiracion");

                    b.Property<DateTime>("FechaVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_venta")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int")
                        .HasColumnName("id_pelicula");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("monto");

                    b.HasKey("Id")
                        .HasName("PK__Venta__3213E83FD2C93F27");

                    b.HasIndex(new[] { "FechaVenta" }, "idx_venta_fecha");

                    b.HasIndex(new[] { "IdPelicula" }, "idx_venta_pelicula");

                    b.HasIndex(new[] { "IdTipo" }, "idx_venta_tipo");

                    b.HasIndex(new[] { "IdUsuario" }, "idx_venta_usuario");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("GeneroPelicula", b =>
                {
                    b.Property<int>("IdGenero")
                        .HasColumnType("int");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int");

                    b.HasKey("IdGenero", "IdPelicula");

                    b.ToTable("GeneroPelicula");
                });

            modelBuilder.Entity("PeliculaGenero", b =>
                {
                    b.Property<int>("IdPelicula")
                        .HasColumnType("int")
                        .HasColumnName("id_pelicula");

                    b.Property<int>("IdGenero")
                        .HasColumnType("int")
                        .HasColumnName("id_genero");

                    b.HasKey("IdPelicula", "IdGenero")
                        .HasName("PK__Pelicula__3C9BF10231928B9A");

                    b.HasIndex(new[] { "IdGenero" }, "idx_pelicula_genero");

                    b.ToTable("PeliculaGenero");
                });

            modelBuilder.Entity("PermisoRol", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.Property<int>("IdPermiso")
                        .HasColumnType("int")
                        .HasColumnName("id_permiso");

                    b.HasKey("IdRol", "IdPermiso")
                        .HasName("PK__PermisoR__889447C4CE063B3D");

                    b.HasIndex("IdPermiso");

                    b.ToTable("PermisoRol");
                });

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdRol", "IdUsuario");

                    b.ToTable("RolUsuario");
                });

            modelBuilder.Entity("UsuarioRol", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.HasKey("IdUsuario", "IdRol")
                        .HasName("PK__UsuarioR__5895CFF39031F745");

                    b.HasIndex("IdRol");

                    b.ToTable("UsuarioRol");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Pelicula", b =>
                {
                    b.HasOne("BEARFLIX.Models.BD.Proveedor", "IdProveedorNavigation")
                        .WithMany("Pelicula")
                        .HasForeignKey("IdProveedor")
                        .IsRequired()
                        .HasConstraintName("FK__Pelicula__id_pro__66603565");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Puntaje", b =>
                {
                    b.HasOne("BEARFLIX.Models.BD.Pelicula", "IdPeliculaNavigation")
                        .WithMany("Puntaje")
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Puntaje__id_peli__02084FDA");

                    b.HasOne("BEARFLIX.Models.BD.Usuario", "IdUsuarioNavigation")
                        .WithMany("Puntaje")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Puntaje__id_usua__01142BA1");

                    b.Navigation("IdPeliculaNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.ReporteProveedor", b =>
                {
                    b.HasOne("BEARFLIX.Models.BD.Proveedor", "IdProveedorNavigation")
                        .WithMany("ReporteProveedor")
                        .HasForeignKey("IdProveedor")
                        .IsRequired()
                        .HasConstraintName("FK__ReportePr__id_pr__09A971A2");

                    b.HasOne("BEARFLIX.Models.BD.Reporte", "IdReporteNavigation")
                        .WithMany("ReporteProveedor")
                        .HasForeignKey("IdReporte")
                        .IsRequired()
                        .HasConstraintName("FK__ReportePr__id_re__08B54D69");

                    b.HasOne("BEARFLIX.Models.BD.TipoVenta", "IdTipoNavigation")
                        .WithMany("ReporteProveedor")
                        .HasForeignKey("IdTipo")
                        .IsRequired()
                        .HasConstraintName("FK__ReportePr__id_ti__0A9D95DB");

                    b.Navigation("IdProveedorNavigation");

                    b.Navigation("IdReporteNavigation");

                    b.Navigation("IdTipoNavigation");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Tarjeta", b =>
                {
                    b.HasOne("BEARFLIX.Models.BD.Banco", "IdBancoNavigation")
                        .WithMany("Tarjeta")
                        .HasForeignKey("IdBanco")
                        .IsRequired()
                        .HasConstraintName("FK__Tarjeta__id_banc__6FE99F9F");

                    b.HasOne("BEARFLIX.Models.BD.TipoTarjeta", "IdTipoNavigation")
                        .WithMany("Tarjeta")
                        .HasForeignKey("IdTipo")
                        .IsRequired()
                        .HasConstraintName("FK__Tarjeta__id_tipo__70DDC3D8");

                    b.HasOne("BEARFLIX.Models.BD.Usuario", "IdUsuarioNavigation")
                        .WithMany("Tarjeta")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Tarjeta__id_usua__71D1E811");

                    b.Navigation("IdBancoNavigation");

                    b.Navigation("IdTipoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Venta", b =>
                {
                    b.HasOne("BEARFLIX.Models.BD.Pelicula", "IdPeliculaNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Venta__id_pelicu__6B24EA82");

                    b.HasOne("BEARFLIX.Models.BD.TipoVenta", "IdTipoNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdTipo")
                        .IsRequired()
                        .HasConstraintName("FK__Venta__id_tipo__6C190EBB");

                    b.HasOne("BEARFLIX.Models.BD.Usuario", "IdUsuarioNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Venta__id_usuari__6A30C649");

                    b.Navigation("IdPeliculaNavigation");

                    b.Navigation("IdTipoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PeliculaGenero", b =>
                {
                    b.HasOne("BEARFLIX.Models.BD.Genero", null)
                        .WithMany()
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PeliculaG__id_ge__7D439ABD");

                    b.HasOne("BEARFLIX.Models.BD.Pelicula", null)
                        .WithMany()
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PeliculaG__id_pe__7C4F7684");
                });

            modelBuilder.Entity("PermisoRol", b =>
                {
                    b.HasOne("BEARFLIX.Models.BD.Permiso", null)
                        .WithMany()
                        .HasForeignKey("IdPermiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PermisoRo__id_pe__797309D9");

                    b.HasOne("BEARFLIX.Models.BD.Rol", null)
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PermisoRo__id_ro__787EE5A0");
                });

            modelBuilder.Entity("UsuarioRol", b =>
                {
                    b.HasOne("BEARFLIX.Models.BD.Rol", null)
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UsuarioRo__id_ro__75A278F5");

                    b.HasOne("BEARFLIX.Models.BD.Usuario", null)
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UsuarioRo__id_us__74AE54BC");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Banco", b =>
                {
                    b.Navigation("Tarjeta");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Pelicula", b =>
                {
                    b.Navigation("Puntaje");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Proveedor", b =>
                {
                    b.Navigation("Pelicula");

                    b.Navigation("ReporteProveedor");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Reporte", b =>
                {
                    b.Navigation("ReporteProveedor");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.TipoTarjeta", b =>
                {
                    b.Navigation("Tarjeta");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.TipoVenta", b =>
                {
                    b.Navigation("ReporteProveedor");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("BEARFLIX.Models.BD.Usuario", b =>
                {
                    b.Navigation("Puntaje");

                    b.Navigation("Tarjeta");

                    b.Navigation("Venta");
                });
#pragma warning restore 612, 618
        }
    }
}
