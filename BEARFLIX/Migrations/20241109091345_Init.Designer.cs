// <auto-generated />
using System;
using BEARFLIX.Models.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BEARFLIX.Migrations
{
    [DbContext(typeof(BearflixContext))]
    [Migration("20241109091345_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BEARFLIX.Models.DB.Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PK__Banco__3213E83FA5571CBC");

                    b.HasIndex(new[] { "Descripcion" }, "UQ__Banco__298336B6E5374AAD")
                        .IsUnique();

                    b.ToTable("Banco");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PK__Genero__3213E83F81BF4720");

                    b.HasIndex(new[] { "Descripcion" }, "UQ__Genero__298336B6F420DDEC")
                        .IsUnique();

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Pelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descripcion");

                    b.Property<int>("Duracion")
                        .HasColumnType("int")
                        .HasColumnName("duracion");

                    b.Property<string>("Fondo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fondo");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("id_proveedor");

                    b.Property<string>("Portada")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("portada");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio_compra");

                    b.Property<decimal>("PrecioRenta")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio_renta");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("titulo");

                    b.Property<string>("TituloImagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("titulo_imagen");

                    b.Property<string>("Video")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("video");

                    b.HasKey("Id")
                        .HasName("PK__Pelicula__3213E83FC5BFF2BE");

                    b.HasIndex("IdProveedor");

                    b.HasIndex(new[] { "Titulo" }, "UQ__Pelicula__38FA640FE0628EFC")
                        .IsUnique();

                    b.HasIndex(new[] { "Titulo" }, "idx_pelicula_titulo");

                    b.ToTable("Pelicula");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PK__Permiso__3213E83F27B58F7C");

                    b.HasIndex(new[] { "Descripcion" }, "UQ__Permiso__298336B66B7BA88C")
                        .IsUnique();

                    b.ToTable("Permiso");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<byte>("Porcentaje")
                        .HasColumnType("tinyint")
                        .HasColumnName("porcentaje");

                    b.HasKey("Id")
                        .HasName("PK__Proveedo__3213E83F6D534381");

                    b.HasIndex(new[] { "Descripcion" }, "UQ__Proveedo__298336B681CD7E70")
                        .IsUnique();

                    b.HasIndex(new[] { "Descripcion" }, "idx_proveedor_descripcion");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Puntaje", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int")
                        .HasColumnName("id_pelicula");

                    b.Property<byte>("Puntaje1")
                        .HasColumnType("tinyint")
                        .HasColumnName("puntaje");

                    b.HasKey("IdUsuario", "IdPelicula")
                        .HasName("PK__Puntaje__856E13595E49EB46");

                    b.HasIndex("IdPelicula");

                    b.HasIndex(new[] { "IdUsuario", "Puntaje1" }, "idx_puntaje_usuario");

                    b.ToTable("Puntaje");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Reporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaGeneracion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_generacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("GananciasBrutas")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("ganancias_brutas");

                    b.Property<decimal>("GananciasTotales")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("ganancias_totales");

                    b.Property<DateOnly>("RangoFin")
                        .HasColumnType("date")
                        .HasColumnName("rango_fin");

                    b.Property<DateOnly>("RangoInicio")
                        .HasColumnType("date")
                        .HasColumnName("rango_inicio");

                    b.HasKey("Id")
                        .HasName("PK__Reporte__3213E83FF7DCCF28");

                    b.ToTable("Reporte");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.ReporteProveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("id_proveedor");

                    b.Property<int>("IdReporte")
                        .HasColumnType("int")
                        .HasColumnName("id_reporte");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo");

                    b.Property<decimal>("MontoAPagar")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("monto_a_pagar");

                    b.Property<decimal>("TotalGanancias")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total_ganancias");

                    b.HasKey("Id")
                        .HasName("PK__ReporteP__3213E83F566369D4");

                    b.HasIndex("IdTipo");

                    b.HasIndex(new[] { "IdReporte", "IdProveedor", "IdTipo" }, "UQ__ReporteP__97F8BA384A60412F")
                        .IsUnique();

                    b.HasIndex(new[] { "IdProveedor", "IdTipo" }, "idx_reporte_proveedor_tipo");

                    b.ToTable("ReporteProveedor");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PK__Rol__3213E83F5800ABCC");

                    b.HasIndex(new[] { "Descripcion" }, "UQ__Rol__298336B600AECE91")
                        .IsUnique();

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Tarjeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdBanco")
                        .HasColumnType("int")
                        .HasColumnName("id_banco");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("numero");

                    b.Property<string>("Titular")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("titular");

                    b.Property<string>("UltimosCuatro")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("ultimos_cuatro");

                    b.Property<DateOnly>("Vencimiento")
                        .HasColumnType("date")
                        .HasColumnName("vencimiento");

                    b.HasKey("Id")
                        .HasName("PK__Tarjeta__3213E83F925A740A");

                    b.HasIndex("IdBanco");

                    b.HasIndex("IdTipo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Tarjeta");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.TipoTarjeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PK__TipoTarj__3213E83FA6262F83");

                    b.HasIndex(new[] { "Descripcion" }, "UQ__TipoTarj__298336B612FFAD09")
                        .IsUnique();

                    b.ToTable("TipoTarjeta");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.TipoVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PK__TipoVent__3213E83FCF71F04A");

                    b.HasIndex(new[] { "Descripcion" }, "UQ__TipoVent__298336B6C6C8068D")
                        .IsUnique();

                    b.ToTable("TipoVenta");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("contrasena");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("correo");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_baja");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_registro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Foto")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("foto");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PK__Usuario__3213E83F72829DD7");

                    b.HasIndex(new[] { "Correo" }, "UQ__Usuario__2A586E0B1F911ACD")
                        .IsUnique();

                    b.HasIndex(new[] { "Correo" }, "idx_usuario_correo")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Expiracion")
                        .HasColumnType("datetime")
                        .HasColumnName("expiracion");

                    b.Property<DateTime>("FechaVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_venta")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int")
                        .HasColumnName("id_pelicula");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("monto");

                    b.HasKey("Id")
                        .HasName("PK__Venta__3213E83F936AECAF");

                    b.HasIndex(new[] { "FechaVenta" }, "idx_venta_fecha");

                    b.HasIndex(new[] { "IdPelicula" }, "idx_venta_pelicula");

                    b.HasIndex(new[] { "IdTipo" }, "idx_venta_tipo");

                    b.HasIndex(new[] { "IdUsuario" }, "idx_venta_usuario");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("GeneroPelicula", b =>
                {
                    b.Property<int>("IdGenero")
                        .HasColumnType("int");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int");

                    b.HasKey("IdGenero", "IdPelicula");

                    b.ToTable("GeneroPelicula");
                });

            modelBuilder.Entity("PeliculaGenero", b =>
                {
                    b.Property<int>("IdPelicula")
                        .HasColumnType("int")
                        .HasColumnName("id_pelicula");

                    b.Property<int>("IdGenero")
                        .HasColumnType("int")
                        .HasColumnName("id_genero");

                    b.HasKey("IdPelicula", "IdGenero")
                        .HasName("PK__Pelicula__3C9BF102EC442E82");

                    b.HasIndex(new[] { "IdGenero" }, "idx_pelicula_genero");

                    b.ToTable("PeliculaGenero");
                });

            modelBuilder.Entity("PermisoRol", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.Property<int>("IdPermiso")
                        .HasColumnType("int")
                        .HasColumnName("id_permiso");

                    b.HasKey("IdRol", "IdPermiso")
                        .HasName("PK__PermisoR__889447C4CC326B4D");

                    b.HasIndex("IdPermiso");

                    b.ToTable("PermisoRol");
                });

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdRol", "IdUsuario");

                    b.ToTable("RolUsuario");
                });

            modelBuilder.Entity("UsuarioRol", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.HasKey("IdUsuario", "IdRol")
                        .HasName("PK__UsuarioR__5895CFF32AE2DCD7");

                    b.HasIndex("IdRol");

                    b.ToTable("UsuarioRol");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Pelicula", b =>
                {
                    b.HasOne("BEARFLIX.Models.DB.Proveedor", "IdProveedorNavigation")
                        .WithMany("Pelicula")
                        .HasForeignKey("IdProveedor")
                        .IsRequired()
                        .HasConstraintName("FK__Pelicula__id_pro__5441852A");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Puntaje", b =>
                {
                    b.HasOne("BEARFLIX.Models.DB.Pelicula", "IdPeliculaNavigation")
                        .WithMany("Puntaje")
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Puntaje__id_peli__6FE99F9F");

                    b.HasOne("BEARFLIX.Models.DB.Usuario", "IdUsuarioNavigation")
                        .WithMany("Puntaje")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Puntaje__id_usua__6EF57B66");

                    b.Navigation("IdPeliculaNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.ReporteProveedor", b =>
                {
                    b.HasOne("BEARFLIX.Models.DB.Proveedor", "IdProveedorNavigation")
                        .WithMany("ReporteProveedor")
                        .HasForeignKey("IdProveedor")
                        .IsRequired()
                        .HasConstraintName("FK__ReportePr__id_pr__778AC167");

                    b.HasOne("BEARFLIX.Models.DB.Reporte", "IdReporteNavigation")
                        .WithMany("ReporteProveedor")
                        .HasForeignKey("IdReporte")
                        .IsRequired()
                        .HasConstraintName("FK__ReportePr__id_re__76969D2E");

                    b.HasOne("BEARFLIX.Models.DB.TipoVenta", "IdTipoNavigation")
                        .WithMany("ReporteProveedor")
                        .HasForeignKey("IdTipo")
                        .IsRequired()
                        .HasConstraintName("FK__ReportePr__id_ti__787EE5A0");

                    b.Navigation("IdProveedorNavigation");

                    b.Navigation("IdReporteNavigation");

                    b.Navigation("IdTipoNavigation");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Tarjeta", b =>
                {
                    b.HasOne("BEARFLIX.Models.DB.Banco", "IdBancoNavigation")
                        .WithMany("Tarjeta")
                        .HasForeignKey("IdBanco")
                        .IsRequired()
                        .HasConstraintName("FK__Tarjeta__id_banc__5DCAEF64");

                    b.HasOne("BEARFLIX.Models.DB.TipoTarjeta", "IdTipoNavigation")
                        .WithMany("Tarjeta")
                        .HasForeignKey("IdTipo")
                        .IsRequired()
                        .HasConstraintName("FK__Tarjeta__id_tipo__5EBF139D");

                    b.HasOne("BEARFLIX.Models.DB.Usuario", "IdUsuarioNavigation")
                        .WithMany("Tarjeta")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Tarjeta__id_usua__5FB337D6");

                    b.Navigation("IdBancoNavigation");

                    b.Navigation("IdTipoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Venta", b =>
                {
                    b.HasOne("BEARFLIX.Models.DB.Pelicula", "IdPeliculaNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Venta__id_pelicu__59063A47");

                    b.HasOne("BEARFLIX.Models.DB.TipoVenta", "IdTipoNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdTipo")
                        .IsRequired()
                        .HasConstraintName("FK__Venta__id_tipo__59FA5E80");

                    b.HasOne("BEARFLIX.Models.DB.Usuario", "IdUsuarioNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Venta__id_usuari__5812160E");

                    b.Navigation("IdPeliculaNavigation");

                    b.Navigation("IdTipoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PeliculaGenero", b =>
                {
                    b.HasOne("BEARFLIX.Models.DB.Genero", null)
                        .WithMany()
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PeliculaG__id_ge__6B24EA82");

                    b.HasOne("BEARFLIX.Models.DB.Pelicula", null)
                        .WithMany()
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PeliculaG__id_pe__6A30C649");
                });

            modelBuilder.Entity("PermisoRol", b =>
                {
                    b.HasOne("BEARFLIX.Models.DB.Permiso", null)
                        .WithMany()
                        .HasForeignKey("IdPermiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PermisoRo__id_pe__6754599E");

                    b.HasOne("BEARFLIX.Models.DB.Rol", null)
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PermisoRo__id_ro__66603565");
                });

            modelBuilder.Entity("UsuarioRol", b =>
                {
                    b.HasOne("BEARFLIX.Models.DB.Rol", null)
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UsuarioRo__id_ro__6383C8BA");

                    b.HasOne("BEARFLIX.Models.DB.Usuario", null)
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UsuarioRo__id_us__628FA481");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Banco", b =>
                {
                    b.Navigation("Tarjeta");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Pelicula", b =>
                {
                    b.Navigation("Puntaje");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Proveedor", b =>
                {
                    b.Navigation("Pelicula");

                    b.Navigation("ReporteProveedor");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Reporte", b =>
                {
                    b.Navigation("ReporteProveedor");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.TipoTarjeta", b =>
                {
                    b.Navigation("Tarjeta");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.TipoVenta", b =>
                {
                    b.Navigation("ReporteProveedor");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("BEARFLIX.Models.DB.Usuario", b =>
                {
                    b.Navigation("Puntaje");

                    b.Navigation("Tarjeta");

                    b.Navigation("Venta");
                });
#pragma warning restore 612, 618
        }
    }
}
